# Define a 'Persistent Volume Claim'(PVC) for MySQL Storage, dynamically provisioned by the cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # Name of PVC essential for identifying the storage data
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
  - ReadWriteOnce # This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi # This tells Kubernetes the amount of space we are trying to claim.

---

# Configure 'Deployment' of MySQL server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    tier: database
spec:
  selector: # MySQL Pod Should contain the same labels
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysql
        tier: database
    spec:
      containers:
      - image: mysql:5.7 # image from Docker Hub
        args:
        - "--ignore-db-dir=lost+found" # Workaround for https://github.com/docker-library/mysql/issues/186
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: javatechie

        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts: # Mounting volume obtained from Persistent Volume Claim
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql # This is the path in the container on which the mounting will take place.
          subPath: mydatabase # Optionally, you can specify a subPath

      volumes: # Place the 'volumes' section within 'spec'
      - name: mysql-persistent-storage # Obtaining 'volume' from PVC
        persistentVolumeClaim:
          claimName: mysql-pv-claim

---

# Define a 'Service' To Expose MySQL to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql # DNS name
  labels:
    app: mysql
    tier: database
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector: # MySQL Pod Should contain the same labels
    app: mysql
    tier: database
  clusterIP: None # We Use DNS, Thus ClusterIP is not relevant
